{"version":3,"sources":["store/constants/loadingText.js","store/constants/inputLetter.js","components/LoadingBtn.jsx","store/actions/textLoading.js","components/Stats.jsx","components/TextArea.jsx","App.jsx","store/actions/letterInput.js","reportWebVitals.js","store/index.js","store/reducers/loadingText.js","store/reducers/letterInput.js","index.jsx"],"names":["LOAD_TEXT","SUCCESS_TEXT","ERROR_TEXT","RESET_LETTER","CORRECT_LETTER","ERROR_LETTER","LoadingBtn","dispatch","useDispatch","Button","className","onClick","e","target","blur","a","type","axios","get","data","payload","accuracyVal","length","activeLetter","Stats","useSelector","state","letterInput","letterIndex","error","accuracy","startTime","useState","time","setTime","useEffect","setInterval","Date","now","console","log","ListGroup","ListGroupItem","class","toFixed","Math","ceil","TextArea","testText","loading","text","letterError","Spinner","animation","Row","Col","md","substr","App","document","addEventListener","letter","getState","keyCode","key","window","body","preventDefault","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.882cc6a1.chunk.js","sourcesContent":["export const LOAD_TEXT = \"LOAD_TEXT\";\nexport const SUCCESS_TEXT = \"SUCCESS_TEXT\";\nexport const ERROR_TEXT = \"ERROR_TEXT\";\n","export const RESET_LETTER = \"RESET_LETTER\";\nexport const CORRECT_LETTER = \"CORRECT_LETTER\";\nexport const ERROR_LETTER = \"ERROR_LETTER\";\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Button } from \"react-bootstrap\";\n\nimport { loadText } from \"../store/actions/textLoading\";\n\nconst LoadingBtn = () => {\n  const dispatch = useDispatch();\n  const ClickHandler = (e) => {\n    e.target.blur();\n    dispatch(loadText());\n  };\n  return (\n    <Button className=\"my-4 bg-lightGray\" onClick={ClickHandler}>\n      Load Text\n    </Button>\n  );\n};\n\nexport default LoadingBtn;\n","import axios from \"axios\";\n\nimport { LOAD_TEXT, SUCCESS_TEXT, ERROR_TEXT } from \"../constants/loadingText\";\nimport { RESET_LETTER } from \"../constants/inputLetter\";\n\nexport const loadText = () => async (dispatch) => {\n  try {\n    dispatch({ type: LOAD_TEXT });\n    const { data } = await axios.get(\n      \"https://baconipsum.com/api/?type=meat-and-filler&paras=1&starts-with=1\"\n    );\n    dispatch({ type: SUCCESS_TEXT, payload: data[0] });\n    dispatch({\n      type: RESET_LETTER,\n      payload: {\n        accuracyVal: 100 / data[0].length,\n        activeLetter: data[0][0],\n      },\n    });\n  } catch (err) {\n    dispatch({ type: ERROR_TEXT });\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ListGroup, ListGroupItem } from \"react-bootstrap\";\n\nconst Stats = () => {\n  const { letterIndex, error, accuracy, startTime } = useSelector((state) => state.letterInput);\n\n  const [time, setTime] = useState(null);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (error || letterIndex >= 1) {\n        setTime(Date.now());\n      }\n    }, 1000);\n  }, []);\n\n  console.log(time);\n  return (\n    <ListGroup>\n      <ListGroupItem className=\"bg-lightGray\">\n        <div className=\"d-flex justify-content-center align-items-center bg-lightGray d-inline \">\n          <i class=\"fas fa-bullseye bg-lightGray\" />\n          <span className=\"bg-lightGray pl-2\">{\" \" + accuracy.toFixed(2)} %</span>\n        </div>\n      </ListGroupItem>\n      <ListGroupItem className=\"bg-lightGray\">\n        <div className=\"d-flex justify-content-center align-items-center bg-lightGray d-inline \">\n          <i class=\"fas fa-tachometer-alt bg-lightGray\" />\n          <span className=\"bg-lightGray pl-2\">\n            {startTime ? Math.ceil((60 * 1000 * letterIndex) / (time - startTime)) : \"--\"} CPM\n          </span>\n        </div>\n      </ListGroupItem>\n    </ListGroup>\n  );\n};\n\nexport default Stats;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { Spinner, Row, Col, ListGroup, ListGroupItem } from \"react-bootstrap\";\n\nimport Stats from \"./Stats\";\nconst TextArea = () => {\n  const { loading, text, error } = useSelector((state) => state.testText);\n  const { letterIndex, error: letterError } = useSelector((state) => state.letterInput);\n\n  return (\n    <>\n      {loading ? (\n        <Spinner animation=\"border\" className=\"color-info d-block m-auto\" />\n      ) : error ? (\n        <div className=\"bg-danger rounded p-2 my-2\">Error Again</div>\n      ) : (\n        text && (\n          <Row className=\"bg-lightGray m-auto rounded\">\n            <Col md={8} className=\"bg-lightGray rounded\">\n              <div className=\"bg-lightGray py-2 px-3 m-0\">\n                {text.substr(0, letterIndex)}\n                <span\n                  className={`d-inline-block py-1 px-1 mr-1 rounded h-100 spanLetter ${\n                    letterError ? \"bg-litered\" : \"bg-litegreen\"\n                  }`}\n                >\n                  {text[letterIndex]}\n                </span>\n                {text.substr(letterIndex + 1, text.length + 1)}\n              </div>\n            </Col>\n            <Col md={4} className=\"bg-lightGray py-2 px-3 rounded m-0\">\n              <Stats />\n            </Col>\n          </Row>\n        )\n      )}\n    </>\n  );\n};\n\nexport default TextArea;\n","import React, { useEffect } from \"react\";\n\nimport { useDispatch } from \"react-redux\";\n\nimport { Container } from \"react-bootstrap\";\nimport LoadingBtn from \"./components/LoadingBtn\";\nimport TextArea from \"./components/TextArea\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { letterInput } from \"./store/actions/letterInput\";\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", (e) => {\n      dispatch(letterInput(e));\n    });\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 32 && e.target == document.body) {\n        e.preventDefault();\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <header className=\"py-3\">\n          <strong>test your typing speed</strong>\n        </header>\n        <LoadingBtn />\n        <TextArea />\n        <footer className=\"mt-5 text-center\">\n          <p>&copy; all copyright reserved</p>\n        </footer>\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","import { CORRECT_LETTER, ERROR_LETTER } from \"../constants/inputLetter\";\n\nexport const letterInput = (letter) => (dispatch, getState) => {\n  const { activeLetter, error, letterIndex } = getState().letterInput;\n  const { keyCode } = letter;\n  if (\n    (keyCode > 64 && keyCode < 91) ||\n    (keyCode >= 188 && keyCode <= 190) ||\n    keyCode === 8 ||\n    keyCode === 59 ||\n    keyCode === 222 ||\n    keyCode === 32\n  ) {\n    if (activeLetter === letter.key) {\n      dispatch({ type: CORRECT_LETTER, payload: getState().testText.text[letterIndex + 1] });\n    } else if (!error) {\n      dispatch({ type: ERROR_LETTER });\n    }\n  }\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nimport { textLoadingReducer } from \"./reducers/loadingText\";\nimport { inputReducer } from \"./reducers/letterInput\";\n\nconst reducers = combineReducers({ testText: textLoadingReducer, letterInput: inputReducer });\n\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import { LOAD_TEXT, SUCCESS_TEXT, ERROR_TEXT } from \"../constants/loadingText\";\n\nexport const textLoadingReducer = (state = { loading: false }, action) => {\n  switch (action.type) {\n    case LOAD_TEXT:\n      return { loading: true };\n    case SUCCESS_TEXT:\n      return { loading: false, text: action.payload };\n    case ERROR_TEXT:\n      return { loading: false, error: true };\n    default:\n      return state;\n  }\n};\n","import { RESET_LETTER, CORRECT_LETTER, ERROR_LETTER } from \"../constants/inputLetter\";\n\nexport const inputReducer = (\n  state = { letterIndex: 0, accuracy: 100, startTime: null },\n  action\n) => {\n  switch (action.type) {\n    case CORRECT_LETTER:\n      return {\n        ...state,\n        letterIndex: state.letterIndex + 1,\n        error: false,\n        activeLetter: action.payload,\n        startTime: state.letterIndex === 0 && !state.startTime ? Date.now() : state.startTime,\n      };\n    case ERROR_LETTER:\n      return {\n        ...state,\n        error: true,\n        accuracy: state.accuracy - state.accuracyVal,\n        startTime: state.letterIndex === 0 && !state.startTime ? Date.now() : state.startTime,\n      };\n    case RESET_LETTER:\n      return {\n        letterIndex: 0,\n        accuracy: 100,\n        accuracyVal: action.payload.accuracyVal,\n        activeLetter: action.payload.activeLetter,\n        startTime: null,\n      };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}